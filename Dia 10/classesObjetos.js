// Programa√ß√£o Orientada a Objetos (POO) -> Classes e Objetos
// na vida real, temos v√°rios objetos: carros, pessoas, animais e etc.
// cada objeto possui caracter√≠sticas (atributos) e a√ß√µes (m√©todos)
// na programa√ß√£o, usamos classes para representar esses objetos
// objetos s√£o inst√¢ncias dessas classes

// classes -> √© o molde ou modelo que define as caracter√≠sticas (atributos) e comportamentos (m√©todos) de um objeto
// objetos -> s√£o inst√¢ncias das classes, ou seja, eles herdam as caracter√≠sticas e comportamentos da classe, algo criado a partir do molde

// exemplo
// classe Carro (com atributos como marca, modelo e cor, com m√©todos como acelerar, frear)
// objeto um carro espec√≠fico, como "Toyota Corolla Branco"

class Carro {
    constructor(marca, modelo, cor) {
        this.marca = marca; // Atributo
        this.modelo = modelo;
        this.cor = cor;
    }

    acelerar() {
        // M√©todo
        console.log(`${this.marca} est√° acelerando! üöóüí®`);
    }
}

const meuCarro = new Carro("Toyota", "Corolla", "Branco");
meuCarro.acelerar();

// declare uma classe utilizando a palavra-chave class
class Pessoa {
    constructor(nome, idade) {
        this.nome = nome;
        this.idade = idade;
    }

    apresentar() {
        console.log(`Ol√°, meu nome √© ${this.nome} e tenho ${this.idade} anos.`);
    }
}

// crie um objeto utilizando a palavra-chave new
const pessoa1 = new Pessoa("Joaquim", 30);
pessoa1.apresentar();

// atributos e m√©todos
// atributos -> caracter√≠sticas do objeto
// m√©todos -> comportamentos do objeto
class Animal {
    constructor(nome, especie) {
        this.nome = nome; // Atributo
        this.especie = especie;
    }

    fazerSom() {
        // M√©todo
        console.log(`${this.nome} est√° fazendo um som! üêæ`);
    }
}

const cachorro = new Animal("Rex", "Cachorro");
cachorro.fazerSom();

